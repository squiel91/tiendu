<%- include('./partials/admin-head.ejs') %>
<%- include('./partials/breadcrumb.ejs', { pages: [{ label: 'Órdenes', link: '/admin/orders' }, { label: 'Detalles' } ] }) %>

<style>

  h1 .number {
    color: lightgray;
  }
  
  .order-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 32px;
  }

  .items-container {
    grid-column: span 2;
  }

  @media screen and (max-width: 992px) {
    .order-container {
      grid-template-columns: 1fr;
      grid-gap: 0;
    }

    .items-container {
      grid-column: span 1;
    }
  }
</style>

<div id="vue-order" v-cloak>
  <div style="display: flex;">
    <h1 style="flex-grow: 1;">Orden <span class="number">#{{ order?.number }}</span></h1>
    <div>
      <tiendu-secondary-button @click="remove()">
        <div>
          <span class="hide-mobile">
            Borrar
          </span>
          <i class="show-mobile bi bi-trash-fill"></i>
        </div>
      </tiendu-secondary-button>
    </div>
  </div>
  <div class="feedback" v-if="error">
    <i class="bi bi-plug-fill"></i> Ocurrió un error
  </div>
  <div class="feedback" v-if="!error && !order">
    <i class="bi bi-watch"></i> Cargando...
  </div>
  <div v-if="!error && order">
    <div class="order-container">
      <div>
        <h2>General</h2>
        <div class="vert-table">
          <div class="row">
            <div class="col header">
              Nombre
            </div>
            <div class="col">
              {{ order.personal.fullName }}
            </div>
          </div>
          <div class="row">
            <div class="col header">
              Documento
            </div>
            <div class="col">
              {{ order.personal.idNumber }} ({{ order.personal.idType }})
            </div>
          </div>
          <div class="row">
            <div class="col header">
              Teléfono
            </div>
            <div class="col">
              {{ order.personal.phone }}
            </div>
          </div>
          <div class="row">
            <div class="col header">
              Email
            </div>
            <div class="col">
              {{ order.personal.email }}
            </div>
          </div>
          <div class="row">
            <div class="col header">
              Facturado
            </div>
            <div class="col">
              ${{ order.billed }} ({{ order.paymentMethod }})
            </div>
          </div>
          <div v-if="order.discount?.code" class="row">
            <div class="col header">
              Descuento
            </div>
            <div class="col">
              <a style="font-weight: bold; color: blue;" :href="'/admin/coupons/' + order.discount.id">{{ order.discount.code }}</a> ({{ order.discount.description }})
            </div>
          </div>
          <div class="row">
            <div class="col header">
              Fecha
            </div>
            <div class="col">
              {{ order.createdFull }}
            </div>
          </div>
          <div class="row">
            <div class="col header">
              Estado
            </div>
            <div class="col">
              <tiendu-input v-model="status" id="status-select" :options="statusOptions"></tiendu-input>
            </div>
          </div>
        </div>
      </div>
      <div v-if="order.shipping">
        <h2>Envío</h2>
        <div class="vert-table">
          <div class="row">
            <div class="col header">
              Dirección
            </div>
            <div class="col">
              {{ order.shipping.address }}, {{ order.shipping.neighbourhood }}, {{ order.shipping.state }}
            </div>
          </div>
          <div class="row">
            <div class="col header">
              Tracking
            </div>
            <div class="col">
              <tiendu-input id="tracking-input" v-model="tracking"></tiendu-input>
            </div>
          </div>
        </div>
      </div>
      <div v-else>
        <h2>Entrega</h2>
        <div class="vert-table">
          <div class="row">
            <div class="col header">
              Tipo
            </div>
            <div class="col">
              Retiro en persona
            </div>
          </div>
        </div>
      </div>
      <div class="items-container">
        <h2>Items</h2>
        <static-table :items="order.items" mainId="originalProduct" :link="item => `/admin/products/${item.originalProduct}`" :cols="itemsCol"></static-table>
      </div>
    </div>
    <tiendu-button @click="save()" ref="mainButton" :loading="loading" normal-text="Guardar cambios" :disabled="!hasChanged"></tiendu-button>
  </div>
</div>

<script type="module">
  import staticTable from '/scripts/tiendu-static-table.vue.js'
  import tienduButton from '/scripts/tiendu-button.vue.js'
  import tienduInput from '/scripts/tiendu-input.vue.js'
  import tienduSecondaryButton from '/scripts/tiendu-secondary-button.vue.js'


  axios.defaults.baseURL = `${window.location.protocol}//${window.location.host}/api/`
  const orderId = (window.location.pathname.split('/')).pop()

  new Vue({
    el: '#vue-order',
    data() {
      return {
        order: undefined,
        error: false,
        tracking: undefined,
        status: undefined,
        statusOptions: [
          'impaga',
          'procesando pago',
          'a confirmar',
          'confirmada',
          'pausada',
          'enviada',
          'lista para retirar',
          'completada',
          'reembolsada',
          'cancelada'
        ],
        itemsCol: [
          { label: 'Producto', val: 'title', format: (title, item) => title + (item.variant? `: ${item.variant}` : '') , style: { 'grid-column': 'span 2' } },
          { label: 'Unidad', val: 'unitPrice', format: price => '$' + price },
          { label: 'Cantidad', val: 'quantity' }
        ],
        loading: false
      }
    },
    methods: {
      async save() {
        try {
          this.loading = true
          const response = await axios.patch(`orders/${orderId}`, {
            status: this.status,
            tracking: this.order.shipping? this.tracking : undefined,
            _csrf: 'help',
          })
          if (response.data.success) {
            this.$refs.mainButton.isSuccess()
          } else {
            console.error('There was an error processing the order')
          } 
          this.loading = false
        } catch (error) {
          this.loading = false
          console.error(error)
        }
      },
      async remove() {
        try {
          const response = await axios.delete(`/orders/${orderId}`)
          window.location.href = '/admin/orders'
        } catch (error) {
          alert('Ocurrió un error al borrar la orden')  
          console.error(error)
        }
      }
    },
    computed: {
      hasChanged () {
        return this.status !== this.order.status || (this.order.shipping && this.tracking !== this.order.shipping.tracking)
      }
    },
    async created () {
      try {
        const response = await axios.get(`orders/${orderId}`)

        if (response.status === 200 && response.data.success) {
          this.order = response.data.order
          this.status = this.order.status
          if (this.order.shipping) {
            if (!this.order.shipping.tracking) this.order.shipping.tracking = '' 
            this.tracking = this.order.shipping.tracking
          }
        } else {
          this.error = true
        }
      } catch (error) {
        this.error = true
        console.error(error)
      }
    },
    components: {
      staticTable,
      tienduButton,
      tienduInput,
      tienduSecondaryButton
    }
  })
</script>

<%- include('./partials/admin-tail.ejs') %>